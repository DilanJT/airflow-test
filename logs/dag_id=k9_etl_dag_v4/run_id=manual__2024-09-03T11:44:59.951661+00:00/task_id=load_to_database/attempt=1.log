[2024-09-03T11:45:10.559+0000] {taskinstance.py:1157} INFO - Dependencies all met for dep_context=non-requeueable deps ti=<TaskInstance: k9_etl_dag_v4.load_to_database manual__2024-09-03T11:44:59.951661+00:00 [queued]>
[2024-09-03T11:45:10.564+0000] {taskinstance.py:1157} INFO - Dependencies all met for dep_context=requeueable deps ti=<TaskInstance: k9_etl_dag_v4.load_to_database manual__2024-09-03T11:44:59.951661+00:00 [queued]>
[2024-09-03T11:45:10.565+0000] {taskinstance.py:1359} INFO - Starting attempt 1 of 1
[2024-09-03T11:45:10.574+0000] {taskinstance.py:1380} INFO - Executing <Task(SQLExecuteQueryOperator): load_to_database> on 2024-09-03 11:44:59.951661+00:00
[2024-09-03T11:45:10.578+0000] {standard_task_runner.py:57} INFO - Started process 1173 to run task
[2024-09-03T11:45:10.583+0000] {standard_task_runner.py:84} INFO - Running: ['***', 'tasks', 'run', 'k9_etl_dag_v4', 'load_to_database', 'manual__2024-09-03T11:44:59.951661+00:00', '--job-id', '32', '--raw', '--subdir', 'DAGS_FOLDER/k9_etl_dag_v4.py', '--cfg-path', '/tmp/tmp8x_6h5mu']
[2024-09-03T11:45:10.583+0000] {standard_task_runner.py:85} INFO - Job 32: Subtask load_to_database
[2024-09-03T11:45:10.619+0000] {task_command.py:415} INFO - Running <TaskInstance: k9_etl_dag_v4.load_to_database manual__2024-09-03T11:44:59.951661+00:00 [running]> on host 2624bebdd8ee
[2024-09-03T11:45:10.687+0000] {taskinstance.py:1660} INFO - Exporting env vars: AIRFLOW_CTX_DAG_OWNER='***' AIRFLOW_CTX_DAG_ID='k9_etl_dag_v4' AIRFLOW_CTX_TASK_ID='load_to_database' AIRFLOW_CTX_EXECUTION_DATE='2024-09-03T11:44:59.951661+00:00' AIRFLOW_CTX_TRY_NUMBER='1' AIRFLOW_CTX_DAG_RUN_ID='manual__2024-09-03T11:44:59.951661+00:00'
[2024-09-03T11:45:10.688+0000] {sql.py:274} INFO - Executing: ['\n            WITH current_data AS (\n                SELECT version\n                FROM k9_facts_v4\n                WHERE fact_id = 50452000 AND is_current = TRUE\n            ),\n            max_version AS (\n                SELECT COALESCE(MAX(version), 0) as max_ver\n                FROM k9_facts_v4\n            ),\n            upsert AS (\n                UPDATE k9_facts_v4\n                SET is_current = FALSE\n                WHERE fact_id = 50452000 AND is_current = TRUE\n                RETURNING fact_id\n            )\n            INSERT INTO k9_facts_v4 (fact_id, created_date, description, category, version, is_current, is_deleted)\n            SELECT \n                50452000,\n                \'2023-10-02T02:22:00.272Z\',\n                \'Here\'\'s looking at you. Dogs have three eyelids, an upper lid, a lower lid and the third lid, called a nictitating membrane or "haw," which helps keep the eye moist and protected.\',\n                \'without_numbers\',\n                CASE \n                    WHEN EXISTS (SELECT 1 FROM current_data) THEN 2  -- Updated record\n                    WHEN EXISTS (SELECT 1 FROM k9_facts_v4) THEN (SELECT max_ver + 1 FROM max_version)  -- New record after initial load\n                    ELSE 1  -- First record or part of initial load\n                END,\n                TRUE,\n                FALSE\n            WHERE NOT EXISTS (\n                SELECT 1 FROM current_data\n                WHERE version = 1\n            ) OR EXISTS (SELECT 1 FROM upsert);\n            ', "\n            WITH current_data AS (\n                SELECT version\n                FROM k9_facts_v4\n                WHERE fact_id = 41600412 AND is_current = TRUE\n            ),\n            max_version AS (\n                SELECT COALESCE(MAX(version), 0) as max_ver\n                FROM k9_facts_v4\n            ),\n            upsert AS (\n                UPDATE k9_facts_v4\n                SET is_current = FALSE\n                WHERE fact_id = 41600412 AND is_current = TRUE\n                RETURNING fact_id\n            )\n            INSERT INTO k9_facts_v4 (fact_id, created_date, description, category, version, is_current, is_deleted)\n            SELECT \n                41600412,\n                '2024-05-12T08:17:49.657Z',\n                'Dogs are direct descendants of wolves.',\n                'without_numbers',\n                CASE \n                    WHEN EXISTS (SELECT 1 FROM current_data) THEN 2  -- Updated record\n                    WHEN EXISTS (SELECT 1 FROM k9_facts_v4) THEN (SELECT max_ver + 1 FROM max_version)  -- New record after initial load\n                    ELSE 1  -- First record or part of initial load\n                END,\n                TRUE,\n                FALSE\n            WHERE NOT EXISTS (\n                SELECT 1 FROM current_data\n                WHERE version = 1\n            ) OR EXISTS (SELECT 1 FROM upsert);\n            ", "\n            WITH current_data AS (\n                SELECT version\n                FROM k9_facts_v4\n                WHERE fact_id = 34594229 AND is_current = TRUE\n            ),\n            max_version AS (\n                SELECT COALESCE(MAX(version), 0) as max_ver\n                FROM k9_facts_v4\n            ),\n            upsert AS (\n                UPDATE k9_facts_v4\n                SET is_current = FALSE\n                WHERE fact_id = 34594229 AND is_current = TRUE\n                RETURNING fact_id\n            )\n            INSERT INTO k9_facts_v4 (fact_id, created_date, description, category, version, is_current, is_deleted)\n            SELECT \n                34594229,\n                '2024-07-11T22:49:15.819Z',\n                'Dachshunds were originally bred for fighting badgers.',\n                'without_numbers',\n                CASE \n                    WHEN EXISTS (SELECT 1 FROM current_data) THEN 2  -- Updated record\n                    WHEN EXISTS (SELECT 1 FROM k9_facts_v4) THEN (SELECT max_ver + 1 FROM max_version)  -- New record after initial load\n                    ELSE 1  -- First record or part of initial load\n                END,\n                TRUE,\n                FALSE\n            WHERE NOT EXISTS (\n                SELECT 1 FROM current_data\n                WHERE version = 1\n            ) OR EXISTS (SELECT 1 FROM upsert);\n            ", "\n            WITH current_data AS (\n                SELECT version\n                FROM k9_facts_v4\n                WHERE fact_id = 78206701 AND is_current = TRUE\n            ),\n            max_version AS (\n                SELECT COALESCE(MAX(version), 0) as max_ver\n                FROM k9_facts_v4\n            ),\n            upsert AS (\n                UPDATE k9_facts_v4\n                SET is_current = FALSE\n                WHERE fact_id = 78206701 AND is_current = TRUE\n                RETURNING fact_id\n            )\n            INSERT INTO k9_facts_v4 (fact_id, created_date, description, category, version, is_current, is_deleted)\n            SELECT \n                78206701,\n                '2024-02-13T12:17:10.103Z',\n                'The Chihuahua was named after the state in Mexico where they were discovered.',\n                'without_numbers',\n                CASE \n                    WHEN EXISTS (SELECT 1 FROM current_data) THEN 2  -- Updated record\n                    WHEN EXISTS (SELECT 1 FROM k9_facts_v4) THEN (SELECT max_ver + 1 FROM max_version)  -- New record after initial load\n                    ELSE 1  -- First record or part of initial load\n                END,\n                TRUE,\n                FALSE\n            WHERE NOT EXISTS (\n                SELECT 1 FROM current_data\n                WHERE version = 1\n            ) OR EXISTS (SELECT 1 FROM upsert);\n            ", "\n            WITH current_data AS (\n                SELECT version\n                FROM k9_facts_v4\n                WHERE fact_id = 78779493 AND is_current = TRUE\n            ),\n            max_version AS (\n                SELECT COALESCE(MAX(version), 0) as max_ver\n                FROM k9_facts_v4\n            ),\n            upsert AS (\n                UPDATE k9_facts_v4\n                SET is_current = FALSE\n                WHERE fact_id = 78779493 AND is_current = TRUE\n                RETURNING fact_id\n            )\n            INSERT INTO k9_facts_v4 (fact_id, created_date, description, category, version, is_current, is_deleted)\n            SELECT \n                78779493,\n                '2023-10-21T13:42:31.896Z',\n                'The earliest dog fossil dates back to nearly 10,000 B.C.',\n                'with_numbers',\n                CASE \n                    WHEN EXISTS (SELECT 1 FROM current_data) THEN 2  -- Updated record\n                    WHEN EXISTS (SELECT 1 FROM k9_facts_v4) THEN (SELECT max_ver + 1 FROM max_version)  -- New record after initial load\n                    ELSE 1  -- First record or part of initial load\n                END,\n                TRUE,\n                FALSE\n            WHERE NOT EXISTS (\n                SELECT 1 FROM current_data\n                WHERE version = 1\n            ) OR EXISTS (SELECT 1 FROM upsert);\n            ", "\n            WITH current_data AS (\n                SELECT version\n                FROM k9_facts_v4\n                WHERE fact_id = 96162389 AND is_current = TRUE\n            ),\n            max_version AS (\n                SELECT COALESCE(MAX(version), 0) as max_ver\n                FROM k9_facts_v4\n            ),\n            upsert AS (\n                UPDATE k9_facts_v4\n                SET is_current = FALSE\n                WHERE fact_id = 96162389 AND is_current = TRUE\n                RETURNING fact_id\n            )\n            INSERT INTO k9_facts_v4 (fact_id, created_date, description, category, version, is_current, is_deleted)\n            SELECT \n                96162389,\n                '2023-08-05T22:31:44.473Z',\n                'Dogs can smell about 1,000 times better than humans. While humans have 5 million smell-detecting cells, dogs have more than 220 million. The part of the brain that interprets smell is also four times larger in dogs than in humans.',\n                'with_numbers',\n                CASE \n                    WHEN EXISTS (SELECT 1 FROM current_data) THEN 2  -- Updated record\n                    WHEN EXISTS (SELECT 1 FROM k9_facts_v4) THEN (SELECT max_ver + 1 FROM max_version)  -- New record after initial load\n                    ELSE 1  -- First record or part of initial load\n                END,\n                TRUE,\n                FALSE\n            WHERE NOT EXISTS (\n                SELECT 1 FROM current_data\n                WHERE version = 1\n            ) OR EXISTS (SELECT 1 FROM upsert);\n            ", "\n            WITH current_data AS (\n                SELECT version\n                FROM k9_facts_v4\n                WHERE fact_id = 92352989 AND is_current = TRUE\n            ),\n            max_version AS (\n                SELECT COALESCE(MAX(version), 0) as max_ver\n                FROM k9_facts_v4\n            ),\n            upsert AS (\n                UPDATE k9_facts_v4\n                SET is_current = FALSE\n                WHERE fact_id = 92352989 AND is_current = TRUE\n                RETURNING fact_id\n            )\n            INSERT INTO k9_facts_v4 (fact_id, created_date, description, category, version, is_current, is_deleted)\n            SELECT \n                92352989,\n                '2024-04-30T09:51:12.862Z',\n                'Dogs who bark the most: Miniature Schnauzers, Cairn Terriers, Yorkshire Terriers, Fox Terriers and West Highland White Terriers.',\n                'without_numbers',\n                CASE \n                    WHEN EXISTS (SELECT 1 FROM current_data) THEN 2  -- Updated record\n                    WHEN EXISTS (SELECT 1 FROM k9_facts_v4) THEN (SELECT max_ver + 1 FROM max_version)  -- New record after initial load\n                    ELSE 1  -- First record or part of initial load\n                END,\n                TRUE,\n                FALSE\n            WHERE NOT EXISTS (\n                SELECT 1 FROM current_data\n                WHERE version = 1\n            ) OR EXISTS (SELECT 1 FROM upsert);\n            ", "\n            WITH current_data AS (\n                SELECT version\n                FROM k9_facts_v4\n                WHERE fact_id = 37731569 AND is_current = TRUE\n            ),\n            max_version AS (\n                SELECT COALESCE(MAX(version), 0) as max_ver\n                FROM k9_facts_v4\n            ),\n            upsert AS (\n                UPDATE k9_facts_v4\n                SET is_current = FALSE\n                WHERE fact_id = 37731569 AND is_current = TRUE\n                RETURNING fact_id\n            )\n            INSERT INTO k9_facts_v4 (fact_id, created_date, description, category, version, is_current, is_deleted)\n            SELECT \n                37731569,\n                '2024-03-13T11:07:45.588Z',\n                'Dogs can count up to five and can perform simple mathematical calculations.',\n                'without_numbers',\n                CASE \n                    WHEN EXISTS (SELECT 1 FROM current_data) THEN 2  -- Updated record\n                    WHEN EXISTS (SELECT 1 FROM k9_facts_v4) THEN (SELECT max_ver + 1 FROM max_version)  -- New record after initial load\n                    ELSE 1  -- First record or part of initial load\n                END,\n                TRUE,\n                FALSE\n            WHERE NOT EXISTS (\n                SELECT 1 FROM current_data\n                WHERE version = 1\n            ) OR EXISTS (SELECT 1 FROM upsert);\n            ", '\n            WITH current_data AS (\n                SELECT version\n                FROM k9_facts_v4\n                WHERE fact_id = 74874382 AND is_current = TRUE\n            ),\n            max_version AS (\n                SELECT COALESCE(MAX(version), 0) as max_ver\n                FROM k9_facts_v4\n            ),\n            upsert AS (\n                UPDATE k9_facts_v4\n                SET is_current = FALSE\n                WHERE fact_id = 74874382 AND is_current = TRUE\n                RETURNING fact_id\n            )\n            INSERT INTO k9_facts_v4 (fact_id, created_date, description, category, version, is_current, is_deleted)\n            SELECT \n                74874382,\n                \'2024-04-14T00:25:43.063Z\',\n                \'Dogs belong to a biological family called the Canidae, a member of this family is called a canid. This is the origin of the adjective "canine" which means "of or like a dog, relating to or characteristic of dogs".\',\n                \'without_numbers\',\n                CASE \n                    WHEN EXISTS (SELECT 1 FROM current_data) THEN 2  -- Updated record\n                    WHEN EXISTS (SELECT 1 FROM k9_facts_v4) THEN (SELECT max_ver + 1 FROM max_version)  -- New record after initial load\n                    ELSE 1  -- First record or part of initial load\n                END,\n                TRUE,\n                FALSE\n            WHERE NOT EXISTS (\n                SELECT 1 FROM current_data\n                WHERE version = 1\n            ) OR EXISTS (SELECT 1 FROM upsert);\n            ', "\n            WITH current_data AS (\n                SELECT version\n                FROM k9_facts_v4\n                WHERE fact_id = 30337860 AND is_current = TRUE\n            ),\n            max_version AS (\n                SELECT COALESCE(MAX(version), 0) as max_ver\n                FROM k9_facts_v4\n            ),\n            upsert AS (\n                UPDATE k9_facts_v4\n                SET is_current = FALSE\n                WHERE fact_id = 30337860 AND is_current = TRUE\n                RETURNING fact_id\n            )\n            INSERT INTO k9_facts_v4 (fact_id, created_date, description, category, version, is_current, is_deleted)\n            SELECT \n                30337860,\n                '2023-08-03T00:57:14.917Z',\n                'The border collie or sheep dog is often considered to be the most intelligent breed of dog some of them have been trained to recognize the words for up to 1,000 objects and retrieved them by verbal command.',\n                'with_numbers',\n                CASE \n                    WHEN EXISTS (SELECT 1 FROM current_data) THEN 2  -- Updated record\n                    WHEN EXISTS (SELECT 1 FROM k9_facts_v4) THEN (SELECT max_ver + 1 FROM max_version)  -- New record after initial load\n                    ELSE 1  -- First record or part of initial load\n                END,\n                TRUE,\n                FALSE\n            WHERE NOT EXISTS (\n                SELECT 1 FROM current_data\n                WHERE version = 1\n            ) OR EXISTS (SELECT 1 FROM upsert);\n            ", "\n            WITH current_data AS (\n                SELECT version\n                FROM k9_facts_v4\n                WHERE fact_id = 45725458 AND is_current = TRUE\n            ),\n            max_version AS (\n                SELECT COALESCE(MAX(version), 0) as max_ver\n                FROM k9_facts_v4\n            ),\n            upsert AS (\n                UPDATE k9_facts_v4\n                SET is_current = FALSE\n                WHERE fact_id = 45725458 AND is_current = TRUE\n                RETURNING fact_id\n            )\n            INSERT INTO k9_facts_v4 (fact_id, created_date, description, category, version, is_current, is_deleted)\n            SELECT \n                45725458,\n                '2023-12-06T06:04:37.129Z',\n                'A dog''s heart beats up to 120 times per minute, or 50 faster than the average human heartbeat of 80 times per minute',\n                'with_numbers',\n                CASE \n                    WHEN EXISTS (SELECT 1 FROM current_data) THEN 2  -- Updated record\n                    WHEN EXISTS (SELECT 1 FROM k9_facts_v4) THEN (SELECT max_ver + 1 FROM max_version)  -- New record after initial load\n                    ELSE 1  -- First record or part of initial load\n                END,\n                TRUE,\n                FALSE\n            WHERE NOT EXISTS (\n                SELECT 1 FROM current_data\n                WHERE version = 1\n            ) OR EXISTS (SELECT 1 FROM upsert);\n            ", '\n            WITH current_data AS (\n                SELECT version\n                FROM k9_facts_v4\n                WHERE fact_id = 46249329 AND is_current = TRUE\n            ),\n            max_version AS (\n                SELECT COALESCE(MAX(version), 0) as max_ver\n                FROM k9_facts_v4\n            ),\n            upsert AS (\n                UPDATE k9_facts_v4\n                SET is_current = FALSE\n                WHERE fact_id = 46249329 AND is_current = TRUE\n                RETURNING fact_id\n            )\n            INSERT INTO k9_facts_v4 (fact_id, created_date, description, category, version, is_current, is_deleted)\n            SELECT \n                46249329,\n                \'2024-05-19T05:23:03.498Z\',\n                \'In ancient Greece, kennels of dogs were kept at the sanctuary of Asclepius at Epidaurus. Dogs were frequently sacrificed there because they were plentiful, inexpensive, and easy to control. During the July 25 celebration of the kunophontis "the massacre of dogs", dog sacrifices were performed to appease the ancestors of Apollo\'\'s son, Linos, who was devoured by dogs..\',\n                \'with_numbers\',\n                CASE \n                    WHEN EXISTS (SELECT 1 FROM current_data) THEN 2  -- Updated record\n                    WHEN EXISTS (SELECT 1 FROM k9_facts_v4) THEN (SELECT max_ver + 1 FROM max_version)  -- New record after initial load\n                    ELSE 1  -- First record or part of initial load\n                END,\n                TRUE,\n                FALSE\n            WHERE NOT EXISTS (\n                SELECT 1 FROM current_data\n                WHERE version = 1\n            ) OR EXISTS (SELECT 1 FROM upsert);\n            ', "\n            WITH current_data AS (\n                SELECT version\n                FROM k9_facts_v4\n                WHERE fact_id = 43300441 AND is_current = TRUE\n            ),\n            max_version AS (\n                SELECT COALESCE(MAX(version), 0) as max_ver\n                FROM k9_facts_v4\n            ),\n            upsert AS (\n                UPDATE k9_facts_v4\n                SET is_current = FALSE\n                WHERE fact_id = 43300441 AND is_current = TRUE\n                RETURNING fact_id\n            )\n            INSERT INTO k9_facts_v4 (fact_id, created_date, description, category, version, is_current, is_deleted)\n            SELECT \n                43300441,\n                '2023-09-02T07:09:10.585Z',\n                'Dalmatians are completely white at birth.',\n                'without_numbers',\n                CASE \n                    WHEN EXISTS (SELECT 1 FROM current_data) THEN 2  -- Updated record\n                    WHEN EXISTS (SELECT 1 FROM k9_facts_v4) THEN (SELECT max_ver + 1 FROM max_version)  -- New record after initial load\n                    ELSE 1  -- First record or part of initial load\n                END,\n                TRUE,\n                FALSE\n            WHERE NOT EXISTS (\n                SELECT 1 FROM current_data\n                WHERE version = 1\n            ) OR EXISTS (SELECT 1 FROM upsert);\n            ", '\n            WITH current_data AS (\n                SELECT version\n                FROM k9_facts_v4\n                WHERE fact_id = 79271318 AND is_current = TRUE\n            ),\n            max_version AS (\n                SELECT COALESCE(MAX(version), 0) as max_ver\n                FROM k9_facts_v4\n            ),\n            upsert AS (\n                UPDATE k9_facts_v4\n                SET is_current = FALSE\n                WHERE fact_id = 79271318 AND is_current = TRUE\n                RETURNING fact_id\n            )\n            INSERT INTO k9_facts_v4 (fact_id, created_date, description, category, version, is_current, is_deleted)\n            SELECT \n                79271318,\n                \'2023-10-19T07:57:31.759Z\',\n                \'The origin of amputating a dog\'\'s tail may go back to the Roman writer Lucius Columella\'\'s "A.D. 4-70"} assertion that tail docking prevented rabies. \',\n                \'with_numbers\',\n                CASE \n                    WHEN EXISTS (SELECT 1 FROM current_data) THEN 2  -- Updated record\n                    WHEN EXISTS (SELECT 1 FROM k9_facts_v4) THEN (SELECT max_ver + 1 FROM max_version)  -- New record after initial load\n                    ELSE 1  -- First record or part of initial load\n                END,\n                TRUE,\n                FALSE\n            WHERE NOT EXISTS (\n                SELECT 1 FROM current_data\n                WHERE version = 1\n            ) OR EXISTS (SELECT 1 FROM upsert);\n            ', '\n        UPDATE k9_facts_v4\n        SET is_current = FALSE, is_deleted = TRUE\n        WHERE fact_id NOT IN (50452000,41600412,34594229,78206701,78779493,96162389,92352989,37731569,74874382,30337860,45725458,46249329,43300441,79271318)\n          AND is_current = TRUE\n          AND is_deleted = FALSE;\n        ']
[2024-09-03T11:45:10.693+0000] {base.py:73} INFO - Using connection ID 'k9_care' for task execution.
[2024-09-03T11:45:10.699+0000] {base.py:73} INFO - Using connection ID 'k9_care' for task execution.
[2024-09-03T11:45:10.711+0000] {sql.py:418} INFO - Running statement: 
            WITH current_data AS (
                SELECT version
                FROM k9_facts_v4
                WHERE fact_id = 50452000 AND is_current = TRUE
            ),
            max_version AS (
                SELECT COALESCE(MAX(version), 0) as max_ver
                FROM k9_facts_v4
            ),
            upsert AS (
                UPDATE k9_facts_v4
                SET is_current = FALSE
                WHERE fact_id = 50452000 AND is_current = TRUE
                RETURNING fact_id
            )
            INSERT INTO k9_facts_v4 (fact_id, created_date, description, category, version, is_current, is_deleted)
            SELECT 
                50452000,
                '2023-10-02T02:22:00.272Z',
                'Here''s looking at you. Dogs have three eyelids, an upper lid, a lower lid and the third lid, called a nictitating membrane or "haw," which helps keep the eye moist and protected.',
                'without_numbers',
                CASE 
                    WHEN EXISTS (SELECT 1 FROM current_data) THEN 2  -- Updated record
                    WHEN EXISTS (SELECT 1 FROM k9_facts_v4) THEN (SELECT max_ver + 1 FROM max_version)  -- New record after initial load
                    ELSE 1  -- First record or part of initial load
                END,
                TRUE,
                FALSE
            WHERE NOT EXISTS (
                SELECT 1 FROM current_data
                WHERE version = 1
            ) OR EXISTS (SELECT 1 FROM upsert);
            , parameters: None
[2024-09-03T11:45:10.715+0000] {sql.py:427} INFO - Rows affected: 1
[2024-09-03T11:45:10.716+0000] {sql.py:418} INFO - Running statement: 
            WITH current_data AS (
                SELECT version
                FROM k9_facts_v4
                WHERE fact_id = 41600412 AND is_current = TRUE
            ),
            max_version AS (
                SELECT COALESCE(MAX(version), 0) as max_ver
                FROM k9_facts_v4
            ),
            upsert AS (
                UPDATE k9_facts_v4
                SET is_current = FALSE
                WHERE fact_id = 41600412 AND is_current = TRUE
                RETURNING fact_id
            )
            INSERT INTO k9_facts_v4 (fact_id, created_date, description, category, version, is_current, is_deleted)
            SELECT 
                41600412,
                '2024-05-12T08:17:49.657Z',
                'Dogs are direct descendants of wolves.',
                'without_numbers',
                CASE 
                    WHEN EXISTS (SELECT 1 FROM current_data) THEN 2  -- Updated record
                    WHEN EXISTS (SELECT 1 FROM k9_facts_v4) THEN (SELECT max_ver + 1 FROM max_version)  -- New record after initial load
                    ELSE 1  -- First record or part of initial load
                END,
                TRUE,
                FALSE
            WHERE NOT EXISTS (
                SELECT 1 FROM current_data
                WHERE version = 1
            ) OR EXISTS (SELECT 1 FROM upsert);
            , parameters: None
[2024-09-03T11:45:10.716+0000] {sql.py:427} INFO - Rows affected: 1
[2024-09-03T11:45:10.716+0000] {sql.py:418} INFO - Running statement: 
            WITH current_data AS (
                SELECT version
                FROM k9_facts_v4
                WHERE fact_id = 34594229 AND is_current = TRUE
            ),
            max_version AS (
                SELECT COALESCE(MAX(version), 0) as max_ver
                FROM k9_facts_v4
            ),
            upsert AS (
                UPDATE k9_facts_v4
                SET is_current = FALSE
                WHERE fact_id = 34594229 AND is_current = TRUE
                RETURNING fact_id
            )
            INSERT INTO k9_facts_v4 (fact_id, created_date, description, category, version, is_current, is_deleted)
            SELECT 
                34594229,
                '2024-07-11T22:49:15.819Z',
                'Dachshunds were originally bred for fighting badgers.',
                'without_numbers',
                CASE 
                    WHEN EXISTS (SELECT 1 FROM current_data) THEN 2  -- Updated record
                    WHEN EXISTS (SELECT 1 FROM k9_facts_v4) THEN (SELECT max_ver + 1 FROM max_version)  -- New record after initial load
                    ELSE 1  -- First record or part of initial load
                END,
                TRUE,
                FALSE
            WHERE NOT EXISTS (
                SELECT 1 FROM current_data
                WHERE version = 1
            ) OR EXISTS (SELECT 1 FROM upsert);
            , parameters: None
[2024-09-03T11:45:10.717+0000] {sql.py:427} INFO - Rows affected: 1
[2024-09-03T11:45:10.717+0000] {sql.py:418} INFO - Running statement: 
            WITH current_data AS (
                SELECT version
                FROM k9_facts_v4
                WHERE fact_id = 78206701 AND is_current = TRUE
            ),
            max_version AS (
                SELECT COALESCE(MAX(version), 0) as max_ver
                FROM k9_facts_v4
            ),
            upsert AS (
                UPDATE k9_facts_v4
                SET is_current = FALSE
                WHERE fact_id = 78206701 AND is_current = TRUE
                RETURNING fact_id
            )
            INSERT INTO k9_facts_v4 (fact_id, created_date, description, category, version, is_current, is_deleted)
            SELECT 
                78206701,
                '2024-02-13T12:17:10.103Z',
                'The Chihuahua was named after the state in Mexico where they were discovered.',
                'without_numbers',
                CASE 
                    WHEN EXISTS (SELECT 1 FROM current_data) THEN 2  -- Updated record
                    WHEN EXISTS (SELECT 1 FROM k9_facts_v4) THEN (SELECT max_ver + 1 FROM max_version)  -- New record after initial load
                    ELSE 1  -- First record or part of initial load
                END,
                TRUE,
                FALSE
            WHERE NOT EXISTS (
                SELECT 1 FROM current_data
                WHERE version = 1
            ) OR EXISTS (SELECT 1 FROM upsert);
            , parameters: None
[2024-09-03T11:45:10.718+0000] {sql.py:427} INFO - Rows affected: 1
[2024-09-03T11:45:10.718+0000] {sql.py:418} INFO - Running statement: 
            WITH current_data AS (
                SELECT version
                FROM k9_facts_v4
                WHERE fact_id = 78779493 AND is_current = TRUE
            ),
            max_version AS (
                SELECT COALESCE(MAX(version), 0) as max_ver
                FROM k9_facts_v4
            ),
            upsert AS (
                UPDATE k9_facts_v4
                SET is_current = FALSE
                WHERE fact_id = 78779493 AND is_current = TRUE
                RETURNING fact_id
            )
            INSERT INTO k9_facts_v4 (fact_id, created_date, description, category, version, is_current, is_deleted)
            SELECT 
                78779493,
                '2023-10-21T13:42:31.896Z',
                'The earliest dog fossil dates back to nearly 10,000 B.C.',
                'with_numbers',
                CASE 
                    WHEN EXISTS (SELECT 1 FROM current_data) THEN 2  -- Updated record
                    WHEN EXISTS (SELECT 1 FROM k9_facts_v4) THEN (SELECT max_ver + 1 FROM max_version)  -- New record after initial load
                    ELSE 1  -- First record or part of initial load
                END,
                TRUE,
                FALSE
            WHERE NOT EXISTS (
                SELECT 1 FROM current_data
                WHERE version = 1
            ) OR EXISTS (SELECT 1 FROM upsert);
            , parameters: None
[2024-09-03T11:45:10.719+0000] {sql.py:427} INFO - Rows affected: 1
[2024-09-03T11:45:10.719+0000] {sql.py:418} INFO - Running statement: 
            WITH current_data AS (
                SELECT version
                FROM k9_facts_v4
                WHERE fact_id = 96162389 AND is_current = TRUE
            ),
            max_version AS (
                SELECT COALESCE(MAX(version), 0) as max_ver
                FROM k9_facts_v4
            ),
            upsert AS (
                UPDATE k9_facts_v4
                SET is_current = FALSE
                WHERE fact_id = 96162389 AND is_current = TRUE
                RETURNING fact_id
            )
            INSERT INTO k9_facts_v4 (fact_id, created_date, description, category, version, is_current, is_deleted)
            SELECT 
                96162389,
                '2023-08-05T22:31:44.473Z',
                'Dogs can smell about 1,000 times better than humans. While humans have 5 million smell-detecting cells, dogs have more than 220 million. The part of the brain that interprets smell is also four times larger in dogs than in humans.',
                'with_numbers',
                CASE 
                    WHEN EXISTS (SELECT 1 FROM current_data) THEN 2  -- Updated record
                    WHEN EXISTS (SELECT 1 FROM k9_facts_v4) THEN (SELECT max_ver + 1 FROM max_version)  -- New record after initial load
                    ELSE 1  -- First record or part of initial load
                END,
                TRUE,
                FALSE
            WHERE NOT EXISTS (
                SELECT 1 FROM current_data
                WHERE version = 1
            ) OR EXISTS (SELECT 1 FROM upsert);
            , parameters: None
[2024-09-03T11:45:10.719+0000] {sql.py:427} INFO - Rows affected: 1
[2024-09-03T11:45:10.720+0000] {sql.py:418} INFO - Running statement: 
            WITH current_data AS (
                SELECT version
                FROM k9_facts_v4
                WHERE fact_id = 92352989 AND is_current = TRUE
            ),
            max_version AS (
                SELECT COALESCE(MAX(version), 0) as max_ver
                FROM k9_facts_v4
            ),
            upsert AS (
                UPDATE k9_facts_v4
                SET is_current = FALSE
                WHERE fact_id = 92352989 AND is_current = TRUE
                RETURNING fact_id
            )
            INSERT INTO k9_facts_v4 (fact_id, created_date, description, category, version, is_current, is_deleted)
            SELECT 
                92352989,
                '2024-04-30T09:51:12.862Z',
                'Dogs who bark the most: Miniature Schnauzers, Cairn Terriers, Yorkshire Terriers, Fox Terriers and West Highland White Terriers.',
                'without_numbers',
                CASE 
                    WHEN EXISTS (SELECT 1 FROM current_data) THEN 2  -- Updated record
                    WHEN EXISTS (SELECT 1 FROM k9_facts_v4) THEN (SELECT max_ver + 1 FROM max_version)  -- New record after initial load
                    ELSE 1  -- First record or part of initial load
                END,
                TRUE,
                FALSE
            WHERE NOT EXISTS (
                SELECT 1 FROM current_data
                WHERE version = 1
            ) OR EXISTS (SELECT 1 FROM upsert);
            , parameters: None
[2024-09-03T11:45:10.720+0000] {sql.py:427} INFO - Rows affected: 1
[2024-09-03T11:45:10.720+0000] {sql.py:418} INFO - Running statement: 
            WITH current_data AS (
                SELECT version
                FROM k9_facts_v4
                WHERE fact_id = 37731569 AND is_current = TRUE
            ),
            max_version AS (
                SELECT COALESCE(MAX(version), 0) as max_ver
                FROM k9_facts_v4
            ),
            upsert AS (
                UPDATE k9_facts_v4
                SET is_current = FALSE
                WHERE fact_id = 37731569 AND is_current = TRUE
                RETURNING fact_id
            )
            INSERT INTO k9_facts_v4 (fact_id, created_date, description, category, version, is_current, is_deleted)
            SELECT 
                37731569,
                '2024-03-13T11:07:45.588Z',
                'Dogs can count up to five and can perform simple mathematical calculations.',
                'without_numbers',
                CASE 
                    WHEN EXISTS (SELECT 1 FROM current_data) THEN 2  -- Updated record
                    WHEN EXISTS (SELECT 1 FROM k9_facts_v4) THEN (SELECT max_ver + 1 FROM max_version)  -- New record after initial load
                    ELSE 1  -- First record or part of initial load
                END,
                TRUE,
                FALSE
            WHERE NOT EXISTS (
                SELECT 1 FROM current_data
                WHERE version = 1
            ) OR EXISTS (SELECT 1 FROM upsert);
            , parameters: None
[2024-09-03T11:45:10.721+0000] {sql.py:427} INFO - Rows affected: 1
[2024-09-03T11:45:10.721+0000] {sql.py:418} INFO - Running statement: 
            WITH current_data AS (
                SELECT version
                FROM k9_facts_v4
                WHERE fact_id = 74874382 AND is_current = TRUE
            ),
            max_version AS (
                SELECT COALESCE(MAX(version), 0) as max_ver
                FROM k9_facts_v4
            ),
            upsert AS (
                UPDATE k9_facts_v4
                SET is_current = FALSE
                WHERE fact_id = 74874382 AND is_current = TRUE
                RETURNING fact_id
            )
            INSERT INTO k9_facts_v4 (fact_id, created_date, description, category, version, is_current, is_deleted)
            SELECT 
                74874382,
                '2024-04-14T00:25:43.063Z',
                'Dogs belong to a biological family called the Canidae, a member of this family is called a canid. This is the origin of the adjective "canine" which means "of or like a dog, relating to or characteristic of dogs".',
                'without_numbers',
                CASE 
                    WHEN EXISTS (SELECT 1 FROM current_data) THEN 2  -- Updated record
                    WHEN EXISTS (SELECT 1 FROM k9_facts_v4) THEN (SELECT max_ver + 1 FROM max_version)  -- New record after initial load
                    ELSE 1  -- First record or part of initial load
                END,
                TRUE,
                FALSE
            WHERE NOT EXISTS (
                SELECT 1 FROM current_data
                WHERE version = 1
            ) OR EXISTS (SELECT 1 FROM upsert);
            , parameters: None
[2024-09-03T11:45:10.722+0000] {sql.py:427} INFO - Rows affected: 1
[2024-09-03T11:45:10.722+0000] {sql.py:418} INFO - Running statement: 
            WITH current_data AS (
                SELECT version
                FROM k9_facts_v4
                WHERE fact_id = 30337860 AND is_current = TRUE
            ),
            max_version AS (
                SELECT COALESCE(MAX(version), 0) as max_ver
                FROM k9_facts_v4
            ),
            upsert AS (
                UPDATE k9_facts_v4
                SET is_current = FALSE
                WHERE fact_id = 30337860 AND is_current = TRUE
                RETURNING fact_id
            )
            INSERT INTO k9_facts_v4 (fact_id, created_date, description, category, version, is_current, is_deleted)
            SELECT 
                30337860,
                '2023-08-03T00:57:14.917Z',
                'The border collie or sheep dog is often considered to be the most intelligent breed of dog some of them have been trained to recognize the words for up to 1,000 objects and retrieved them by verbal command.',
                'with_numbers',
                CASE 
                    WHEN EXISTS (SELECT 1 FROM current_data) THEN 2  -- Updated record
                    WHEN EXISTS (SELECT 1 FROM k9_facts_v4) THEN (SELECT max_ver + 1 FROM max_version)  -- New record after initial load
                    ELSE 1  -- First record or part of initial load
                END,
                TRUE,
                FALSE
            WHERE NOT EXISTS (
                SELECT 1 FROM current_data
                WHERE version = 1
            ) OR EXISTS (SELECT 1 FROM upsert);
            , parameters: None
[2024-09-03T11:45:10.722+0000] {sql.py:427} INFO - Rows affected: 1
[2024-09-03T11:45:10.722+0000] {sql.py:418} INFO - Running statement: 
            WITH current_data AS (
                SELECT version
                FROM k9_facts_v4
                WHERE fact_id = 45725458 AND is_current = TRUE
            ),
            max_version AS (
                SELECT COALESCE(MAX(version), 0) as max_ver
                FROM k9_facts_v4
            ),
            upsert AS (
                UPDATE k9_facts_v4
                SET is_current = FALSE
                WHERE fact_id = 45725458 AND is_current = TRUE
                RETURNING fact_id
            )
            INSERT INTO k9_facts_v4 (fact_id, created_date, description, category, version, is_current, is_deleted)
            SELECT 
                45725458,
                '2023-12-06T06:04:37.129Z',
                'A dog''s heart beats up to 120 times per minute, or 50 faster than the average human heartbeat of 80 times per minute',
                'with_numbers',
                CASE 
                    WHEN EXISTS (SELECT 1 FROM current_data) THEN 2  -- Updated record
                    WHEN EXISTS (SELECT 1 FROM k9_facts_v4) THEN (SELECT max_ver + 1 FROM max_version)  -- New record after initial load
                    ELSE 1  -- First record or part of initial load
                END,
                TRUE,
                FALSE
            WHERE NOT EXISTS (
                SELECT 1 FROM current_data
                WHERE version = 1
            ) OR EXISTS (SELECT 1 FROM upsert);
            , parameters: None
[2024-09-03T11:45:10.723+0000] {sql.py:427} INFO - Rows affected: 1
[2024-09-03T11:45:10.723+0000] {sql.py:418} INFO - Running statement: 
            WITH current_data AS (
                SELECT version
                FROM k9_facts_v4
                WHERE fact_id = 46249329 AND is_current = TRUE
            ),
            max_version AS (
                SELECT COALESCE(MAX(version), 0) as max_ver
                FROM k9_facts_v4
            ),
            upsert AS (
                UPDATE k9_facts_v4
                SET is_current = FALSE
                WHERE fact_id = 46249329 AND is_current = TRUE
                RETURNING fact_id
            )
            INSERT INTO k9_facts_v4 (fact_id, created_date, description, category, version, is_current, is_deleted)
            SELECT 
                46249329,
                '2024-05-19T05:23:03.498Z',
                'In ancient Greece, kennels of dogs were kept at the sanctuary of Asclepius at Epidaurus. Dogs were frequently sacrificed there because they were plentiful, inexpensive, and easy to control. During the July 25 celebration of the kunophontis "the massacre of dogs", dog sacrifices were performed to appease the ancestors of Apollo''s son, Linos, who was devoured by dogs..',
                'with_numbers',
                CASE 
                    WHEN EXISTS (SELECT 1 FROM current_data) THEN 2  -- Updated record
                    WHEN EXISTS (SELECT 1 FROM k9_facts_v4) THEN (SELECT max_ver + 1 FROM max_version)  -- New record after initial load
                    ELSE 1  -- First record or part of initial load
                END,
                TRUE,
                FALSE
            WHERE NOT EXISTS (
                SELECT 1 FROM current_data
                WHERE version = 1
            ) OR EXISTS (SELECT 1 FROM upsert);
            , parameters: None
[2024-09-03T11:45:10.724+0000] {sql.py:427} INFO - Rows affected: 1
[2024-09-03T11:45:10.724+0000] {sql.py:418} INFO - Running statement: 
            WITH current_data AS (
                SELECT version
                FROM k9_facts_v4
                WHERE fact_id = 43300441 AND is_current = TRUE
            ),
            max_version AS (
                SELECT COALESCE(MAX(version), 0) as max_ver
                FROM k9_facts_v4
            ),
            upsert AS (
                UPDATE k9_facts_v4
                SET is_current = FALSE
                WHERE fact_id = 43300441 AND is_current = TRUE
                RETURNING fact_id
            )
            INSERT INTO k9_facts_v4 (fact_id, created_date, description, category, version, is_current, is_deleted)
            SELECT 
                43300441,
                '2023-09-02T07:09:10.585Z',
                'Dalmatians are completely white at birth.',
                'without_numbers',
                CASE 
                    WHEN EXISTS (SELECT 1 FROM current_data) THEN 2  -- Updated record
                    WHEN EXISTS (SELECT 1 FROM k9_facts_v4) THEN (SELECT max_ver + 1 FROM max_version)  -- New record after initial load
                    ELSE 1  -- First record or part of initial load
                END,
                TRUE,
                FALSE
            WHERE NOT EXISTS (
                SELECT 1 FROM current_data
                WHERE version = 1
            ) OR EXISTS (SELECT 1 FROM upsert);
            , parameters: None
[2024-09-03T11:45:10.726+0000] {sql.py:427} INFO - Rows affected: 1
[2024-09-03T11:45:10.726+0000] {sql.py:418} INFO - Running statement: 
            WITH current_data AS (
                SELECT version
                FROM k9_facts_v4
                WHERE fact_id = 79271318 AND is_current = TRUE
            ),
            max_version AS (
                SELECT COALESCE(MAX(version), 0) as max_ver
                FROM k9_facts_v4
            ),
            upsert AS (
                UPDATE k9_facts_v4
                SET is_current = FALSE
                WHERE fact_id = 79271318 AND is_current = TRUE
                RETURNING fact_id
            )
            INSERT INTO k9_facts_v4 (fact_id, created_date, description, category, version, is_current, is_deleted)
            SELECT 
                79271318,
                '2023-10-19T07:57:31.759Z',
                'The origin of amputating a dog''s tail may go back to the Roman writer Lucius Columella''s "A.D. 4-70"} assertion that tail docking prevented rabies. ',
                'with_numbers',
                CASE 
                    WHEN EXISTS (SELECT 1 FROM current_data) THEN 2  -- Updated record
                    WHEN EXISTS (SELECT 1 FROM k9_facts_v4) THEN (SELECT max_ver + 1 FROM max_version)  -- New record after initial load
                    ELSE 1  -- First record or part of initial load
                END,
                TRUE,
                FALSE
            WHERE NOT EXISTS (
                SELECT 1 FROM current_data
                WHERE version = 1
            ) OR EXISTS (SELECT 1 FROM upsert);
            , parameters: None
[2024-09-03T11:45:10.728+0000] {sql.py:427} INFO - Rows affected: 1
[2024-09-03T11:45:10.728+0000] {sql.py:418} INFO - Running statement: 
        UPDATE k9_facts_v4
        SET is_current = FALSE, is_deleted = TRUE
        WHERE fact_id NOT IN (50452000,41600412,34594229,78206701,78779493,96162389,92352989,37731569,74874382,30337860,45725458,46249329,43300441,79271318)
          AND is_current = TRUE
          AND is_deleted = FALSE;
        , parameters: None
[2024-09-03T11:45:10.729+0000] {sql.py:427} INFO - Rows affected: 1
[2024-09-03T11:45:10.741+0000] {taskinstance.py:1398} INFO - Marking task as SUCCESS. dag_id=k9_etl_dag_v4, task_id=load_to_database, execution_date=20240903T114459, start_date=20240903T114510, end_date=20240903T114510
[2024-09-03T11:45:10.764+0000] {local_task_job_runner.py:228} INFO - Task exited with return code 0
[2024-09-03T11:45:10.789+0000] {taskinstance.py:2776} INFO - 1 downstream tasks scheduled from follow-on schedule check
